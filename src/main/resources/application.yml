# Spring properties
spring:
  application:    # Identify this application
    name: PortalGateWay
  server-uuid: ${random.uuid}
  http:    # spring boot 1.x
    multipart:
      enabled: true
      max-file-size: 1024MB
      max-request-size: 1024MB
      location: ${java.io.tmpdir}
  servlet:    # spring boot 2.x
    multipart:
      enabled: true
      max-file-size: 1024MB
      max-request-size: 1024MB
      location: ${java.io.tmpdir}

#Spring config setting (current version not used)
#  boot:
#    #Spring boot admin settings
#    admin:
#      routes:
#        endpoints: env,metrics,trace,info,trace,heapdump,hystrix.stream,docs
#        #Timeintervalin ms to update the status of App
#      monitor:
#        perio: 10000
#        #LifeTime of App status in ms.
#        status-lifetime: 10000
#        #Connection Timeout in ms when App's status and info
#        connect-timeout: 2000
#        #Read Timeout in ms when App's status and info
#        read-timeout: 5000
#      metadata-keys-to-sanitize: .password$,.*secret$,.*key$,.$token$,.credentials.,.*vcap_services$

#Infra Admin Settings (current version not used)
#project:
#  name: paasta-gate-way
#  artifactId: paasta-gate-way
#  description: paasta-gate-way management service
#info:
#  app:
#    encoding: Encoding - UTF-8
#  java:
#    source: Source - java ver
#    target: Instance1 - Java ver
#  spring:
#    profiles: ${spring.profiles.active:default}
#  build:
#    name: ${project.name}
#    artifact: ${project.artifactId}
#    description: ${project.description}

server:     # Default Gateway server port
  port: ${PORT:2225}

# Zuul route rule : zuul.routes.[spring.application.name]=path
zuul:
  ignored-services: '*'
  host:
    connect-timeout-millis: 5000
    socket-timeout-millis: 60000
  routes:
    PortalApi:
      path: /portalapi/**
      url: PORTALAPI
      sensitiveHeaders:
    CommonApi:
      path: /commonapi/**
      url: PORTALCOMMONAPI
      sensitiveHeaders:
    StorageApi:
      path: /storageapi/**
      url: PORTALSTORAGEAPI
      sensitiveHeaders:

eureka:
  instance:
    preferIpAddress: true

ribbon:     # Do load balancing without discovery service
  eureka:
    enabled: ${EUREKA_ENABLED:true}
  ConnectTimeout: 5000
  ReadTimeout: 60000
  SocketTimeout: 60000

management:     # If you set off security...
  security:
    enabled: false

---
spring:
  profiles: local

eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:2221/eureka/ # YOUR LOCAL TEST SETTING
      registry-fetch-interval-seconds: 5
  instance:
    hostname: ${spring.cloud.client.hostname}
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 10

---
spring:
  profiles: dev

eureka:
  client:
    serviceUrl:
      defaultZone: http://XXX.XXX.XXX.XXX:2221/eureka/ #YOUR EUREKA SERVICE DEV SETTING(ACTIVE INFORMATION)
      registry-fetch-interval-seconds: 5
  instance:
    hostname: ${spring.cloud.client.hostname}
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 10